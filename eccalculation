const int analogPin = 34;            // Use any ADC-capable pin (e.g., GPIO 34)
const float VCC = 3.3;               // ESP32 ADC reference is 3.3V
const float knownResistor = 880.0;   // 4 × 220Ω resistors in series
const float cellConstant = 4.29;     // Calculated from probe geometry

void setup() {
  Serial.begin(115200);              // ESP32 works well at higher baud rates
  analogReadResolution(12);          // Set ADC to 12-bit resolution (0–4095)
}

void loop() {
  int analogValue = analogRead(analogPin);  // 0 to 4095
  float voltage = (analogValue / 4095.0) * VCC;
 
 


  float current = voltage / knownResistor;
  float voltageAcrossSolution = VCC - voltage;

  float resistanceSolution;
  if (current != 0)
    resistanceSolution = voltageAcrossSolution / current;
  else
    resistanceSolution = 999999;  // Dummy high value to avoid div by zero

  float ecValue = (1.0 / resistanceSolution) * cellConstant; // Siemens/cm

//TDS
  float ppm = ecValue * 1000 * 0.64; // For 0.64 ppm-to-EC factor

  // Display results
  Serial.print("Analog Value: ");
  Serial.print(analogValue);
  Serial.print(" | Voltage: ");
  Serial.print(voltage, 3);
  Serial.print(" V | EC: ");
  Serial.print(ecValue, 6);
  Serial.println(" S/cm");
  Serial.print(" | TDS :");
  Serial.print(ppm);
  Serial.print(" ppm");
  Serial.print()

  delay(1000);
}
